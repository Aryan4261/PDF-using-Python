# -*- coding: utf-8 -*-
"""Probability Distribution Function using Python

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ejV6h5OddgsAYgqoTQGKeb3_0ezubaNm
"""

#Import Libraries
from matplotlib import pyplot
from numpy.random import normal
from numpy import mean
from numpy import std
from scipy.stats import norm

"""**1. Summarized Density with Histogram**"""

sample = normal(size=1000)
pyplot.hist(sample, bins=10)
pyplot.show()

"""**2.Parametric Density Function**"""

sample = normal(loc=50, scale=5, size=1000)
sample
pyplot.hist(sample,bins=10, density=True)
pyplot.show()

"""Calculate Parameters"""

sample_mean = mean(sample)
sample_std = std(sample)
print('Mean=%.3f, standard deviation =%.3f'%(sample_mean,sample_std))

"""Define the Distribution"""

dist = norm(sample_mean, sample_std)
dist

"""Sample probability for range of outcomes"""

values = [value for value in range(30, 70)]
probabilities = [dist.pdf(value) for value in values]
probabilities

"""Plot histogram and PDF"""

pyplot.hist(sample, bins=10, density=True)
pyplot.plot(values, probabilities)
pyplot.show()

"""**3. Non-Parametric Density Function**"""

#importing libraries
from  numpy import hstack
from numpy import asarray
from numpy import exp
from sklearn.neighbors import KernelDensity

"""Generate a Sample"""

Sample1 = normal(loc=20, scale=5, size=300)
Sample2 = normal(loc=40, scale=5, size=700)
Sample = hstack((Sample1, Sample2))
Sample

pyplot.hist(Sample, bins=50, density=True)
pyplot.show()

"""Fit Density"""

model = KernelDensity(bandwidth=3, kernel = 'gaussian')
Sample = Sample.reshape((len(Sample), 1))
model.fit(Sample)

"""Sample probability for a range of Outcomes"""

values = asarray([value for value in range(1, 60)])
values = values.reshape((len(values), 1))
probabilities = model.score_samples(values)
probabilities = exp(probabilities)
probabilities

"""Plot Histogram and PDF"""

pyplot.hist(Sample, bins=50, density=True)
pyplot.plot(values[:],probabilities)
pyplot.show()

